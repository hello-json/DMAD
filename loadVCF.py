# -*- coding: utf-8 -*-
import numpy as np

'''
label_dic = {
    1: [1, -1, -1, -1, -1, -1],
    2: [-1, 1, -1, -1, -1, -1],
    3: [-1, -1, 1, -1, -1, -1],
    4: [-1, -1, -1, 1, -1, -1],
    5: [-1, -1, -1, -1, 1, -1],
    6: [1, 1, -1, -1, -1, -1],
    7: [1, -1, 1, -1, -1, -1],
    8: [1, -1, -1, 1, -1, -1],
    9: [1, -1, -1, -1, 1, -1],
    10: [-1, 1, 1, -1, -1, -1],
    11: [-1, 1, -1, 1, -1, -1],
    12: [-1, 1, -1, -1, 1, -1],
    13: [-1, -1, 1, 1, -1, -1],
    14: [-1, -1, 1, -1, 1, -1],
    15: [-1, -1, -1, 1, 1, -1],
    16: [1, 1, 1, -1, -1, -1],
    17: [1, 1, -1, 1, -1, -1],
    18: [1, 1, -1, -1, 1, -1],
    19: [1, -1, 1, 1, -1, -1],
    20: [1, -1, 1, -1, 1, -1],
    21: [1, -1, -1, 1, 1, -1],
    22: [-1, 1, 1, 1, -1, -1],
    23: [-1, 1, 1, -1, 1, -1],
    24: [-1, 1, -1, 1, 1, -1],
    25: [-1, -1, 1, 1, 1, -1],
    26: [1, 1, 1, 1, -1, -1],
    27: [1, 1, 1, -1, 1, -1],
    28: [1, 1, -1, 1, 1, -1],
    29: [1, -1, 1, 1, 1, -1],
    30: [-1, 1, 1, 1, 1, -1],
    31: [1, 1, 1, 1, 1, -1],
    32: [-1, -1, -1, -1, -1, 1],
    33: [1, -1, -1, -1, -1, 1],
    34: [-1, 1, -1, -1, -1, 1],
    35: [-1, -1, 1, -1, -1, 1],
    36: [-1, -1, -1, 1, -1, 1],
    37: [-1, -1, -1, -1, 1, 1],
    38: [1, 1, -1, -1, -1, 1],
    39: [1, -1, 1, -1, -1, 1],
    40: [1, -1, -1, 1, -1, 1],
    41: [1, -1, -1, -1, 1, 1],
    42: [-1, 1, 1, -1, -1, 1],
    43: [-1, 1, -1, 1, -1, 1],
    44: [-1, 1, -1, -1, 1, 1],
    45: [-1, -1, 1, 1, -1, 1],
    46: [-1, -1, 1, -1, 1, 1],
    47: [-1, -1, -1, 1, 1, 1],
    48: [1, 1, 1, -1, -1, 1],
    49: [1, 1, -1, 1, -1, 1],
    50: [1, 1, -1, -1, 1, 1],
    51: [1, -1, 1, 1, -1, 1],
    52: [1, -1, 1, -1, 1, 1],
    53: [1, -1, -1, 1, 1, 1],
    54: [-1, 1, 1, 1, -1, 1],
    55: [-1, 1, 1, -1, 1, 1],
    56: [-1, 1, -1, 1, 1, 1],
    57: [-1, -1, 1, 1, 1, 1],
    58: [1, 1, 1, 1, -1, 1],
    59: [1, 1, 1, -1, 1, 1],
    60: [1, 1, -1, 1, 1, 1],
    61: [1, -1, 1, 1, 1, 1],
    62: [-1, 1, 1, 1, 1, 1],
    63: [1, 1, 1, 1, 1, 1]
}         #从key值32开始是新增的，key值32表示单独使用新增的那个软件，key值32往后的都是直接复制key值32往前的内容。然后将前面的末尾加0，后面的末尾加1。最后将数组里的0都替换成了-1。
'''
def loadVCF(markedFileDir):
    label_dic = {
        1: [1.0, -1.0, -1.0, -1.0, -1.0, -1.0],
        2: [-1.0, 1.0, -1.0, -1.0, -1.0, -1.0],
        3: [-1.0, -1.0, 1.0, -1.0, -1.0, -1.0],
        4: [-1.0, -1.0, -1.0, 1.0, -1.0, -1.0],
        5: [-1.0, -1.0, -1.0, -1.0, 1.0, -1.0],
        6: [1.0, 1.0, -1.0, -1.0, -1.0, -1.0],
        7: [1.0, -1.0, 1.0, -1.0, -1.0, -1.0],
        8: [1.0, -1.0, -1.0, 1.0, -1.0, -1.0],
        9: [1.0, -1.0, -1.0, -1.0, 1.0, -1.0],
        10: [-1.0, 1.0, 1.0, -1.0, -1.0, -1.0],
        11: [-1.0, 1.0, -1.0, 1.0, -1.0, -1.0],
        12: [-1.0, 1.0, -1.0, -1.0, 1.0, -1.0],
        13: [-1.0, -1.0, 1.0, 1.0, -1.0, -1.0],
        14: [-1.0, -1.0, 1.0, -1.0, 1.0, -1.0],
        15: [-1.0, -1.0, -1.0, 1.0, 1.0, -1.0],
        16: [1.0, 1.0, 1.0, -1.0, -1.0, -1.0],
        17: [1.0, 1.0, -1.0, 1.0, -1.0, -1.0],
        18: [1.0, 1.0, -1.0, -1.0, 1.0, -1.0],
        19: [1.0, -1.0, 1.0, 1.0, -1.0, -1.0],
        20: [1.0, -1.0, 1.0, -1.0, 1.0, -1.0],
        21: [1.0, -1.0, -1.0, 1.0, 1.0, -1.0],
        22: [-1.0, 1.0, 1.0, 1.0, -1.0, -1.0],
        23: [-1.0, 1.0, 1.0, -1.0, 1.0, -1.0],
        24: [-1.0, 1.0, -1.0, 1.0, 1.0, -1.0],
        25: [-1.0, -1.0, 1.0, 1.0, 1.0, -1.0],
        26: [1.0, 1.0, 1.0, 1.0, -1.0, -1.0],
        27: [1.0, 1.0, 1.0, -1.0, 1.0, -1.0],
        28: [1.0, 1.0, -1.0, 1.0, 1.0, -1.0],
        29: [1.0, -1.0, 1.0, 1.0, 1.0, -1.0],
        30: [-1.0, 1.0, 1.0, 1.0, 1.0, -1.0],
        31: [1.0, 1.0, 1.0, 1.0, 1.0, -1.0],
        32: [-1.0, -1.0, -1.0, -1.0, -1.0, 1.0],
        33: [1.0, -1.0, -1.0, -1.0, -1.0, 1.0],
        34: [-1.0, 1.0, -1.0, -1.0, -1.0, 1.0],
        35: [-1.0, -1.0, 1.0, -1.0, -1.0, 1.0],
        36: [-1.0, -1.0, -1.0, 1.0, -1.0, 1.0],
        37: [-1.0, -1.0, -1.0, -1.0, 1.0, 1.0],
        38: [1.0, 1.0, -1.0, -1.0, -1.0, 1.0],
        39: [1.0, -1.0, 1.0, -1.0, -1.0, 1.0],
        40: [1.0, -1.0, -1.0, 1.0, -1.0, 1.0],
        41: [1.0, -1.0, -1.0, -1.0, 1.0, 1.0],
        42: [-1.0, 1.0, 1.0, -1.0, -1.0, 1.0],
        43: [-1.0, 1.0, -1.0, 1.0, -1.0, 1.0],
        44: [-1.0, 1.0, -1.0, -1.0, 1.0, 1.0],
        45: [-1.0, -1.0, 1.0, 1.0, -1.0, 1.0],
        46: [-1.0, -1.0, 1.0, -1.0, 1.0, 1.0],
        47: [-1.0, -1.0, -1.0, 1.0, 1.0, 1.0],
        48: [1.0, 1.0, 1.0, -1.0, -1.0, 1.0],
        49: [1.0, 1.0, -1.0, 1.0, -1.0, 1.0],
        50: [1.0, 1.0, -1.0, -1.0, 1.0, 1.0],
        51: [1.0, -1.0, 1.0, 1.0, -1.0, 1.0],
        52: [1.0, -1.0, 1.0, -1.0, 1.0, 1.0],
        53: [1.0, -1.0, -1.0, 1.0, 1.0, 1.0],
        54: [-1.0, 1.0, 1.0, 1.0, -1.0, 1.0],
        55: [-1.0, 1.0, 1.0, -1.0, 1.0, 1.0],
        56: [-1.0, 1.0, -1.0, 1.0, 1.0, 1.0],
        57: [-1.0, -1.0, 1.0, 1.0, 1.0, 1.0],
        58: [1.0, 1.0, 1.0, 1.0, -1.0, 1.0],
        59: [1.0, 1.0, 1.0, -1.0, 1.0, 1.0],
        60: [1.0, 1.0, -1.0, 1.0, 1.0, 1.0],
        61: [1.0, -1.0, 1.0, 1.0, 1.0, 1.0],
        62: [-1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        63: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    }

    #markedFileDir = r"C:\Users\Administrator\Desktop\博士论文\第三个点\数据\完整数据\只有deletion\新的八个特征\\recorededF1scoreFile.csv"  #注意由于python里\是转义符，所以引号前的r不能少
    markedFileObject = open(markedFileDir)
    try:
         markedFile = markedFileObject.read( )
    finally:
         markedFileObject.close( )
    markedFile_rows = markedFile.split('\n')
    markedFile_rows.pop()
    bags_arr = []
    label_arr = []
    #First = True      #跳过第一行
    for one_markedFile_row in markedFile_rows:
        #if First:                    #跳过第一行
        #    First = False            #跳过第一行
        #    continue                 #跳过第一行
        one_markedFile_row_arr = one_markedFile_row.split(",")
        one_markedFile_row_arr = [ii for ii in one_markedFile_row_arr if ii != ""]      #删除数组中的空元素
        #instance_feature_num = 6      #（后需改！！！）
        instance_feature_num = 14
        instance_feature_count = 0
        instance_feature_arr = []
        bag_arr = []
        #for feature_i in range(9):      #这个值是除标签之外的列数加1
        for feature_i in range(len(one_markedFile_row_arr) - 1 + 1):   #这个值是除标签之外的列数加1（后需将31改为63！！！）
            if instance_feature_count == instance_feature_num:
                bag_arr.append(np.array(instance_feature_arr))
                instance_feature_arr = []
                instance_feature_count = 0
            instance_feature_count = instance_feature_count + 1
            instance_feature_arr.append(float(one_markedFile_row_arr[feature_i]))
        bags_arr.append(np.array([np.array(bag_arr)]))   #为适配格式要求，单个包数组外面无缘无故有套了层数组
        #feature_arr.append([float(one_markedFile_row_arr[0]), float(one_markedFile_row_arr[1]), float(one_markedFile_row_arr[2]), float(one_markedFile_row_arr[3]), float(one_markedFile_row_arr[4]), float(one_markedFile_row_arr[5]), float(one_markedFile_row_arr[6]), float(one_markedFile_row_arr[7])])
        '''
        max_value = 0
        for i in range(63):      #（后需改为63！！！）
            #fixed_number = 8
            fixed_number = -63    #为了后面直接改成-63，这里提前测试了从后往前的值（后需改为-63！！！）
            index = fixed_number + i
            if float(one_markedFile_row_arr[index]) > max_value:
                max_value = float(one_markedFile_row_arr[index])
                dic_index = i + 1
        label_arr.append(label_dic[dic_index])
        '''
        label_arr.append(label_dic[int(one_markedFile_row_arr[-1])])

    '''
    #这块内容是一开始实验成功的，但是只适合各个包的示例数目一样的情况。当改变示例数目之后，np.array（）函数会报错，所以尝试了下面那块内容发现不转np数组竟然也可以跑通。（https://blog.csdn.net/sinat_29957455/article/details/103487477中还有使用mask使其一致的方法，后面有需要了再尝试）
    bags_npArr = np.array(bags_arr)
    labels_npArr = np.array(label_arr)
    data_dic = {'bags': bags_npArr, 'labels': labels_npArr}
    '''

    labels_npArr = np.array(label_arr)
    data_dic = {'bags': bags_arr, 'labels': labels_npArr}

    #print(type(bags_npArr[0][0][0][0]))
    #print(bags_npArr[0][0][0])
    #print(bags_npArr)
    #print(labels_npArr)
    #print(type(labels_npArr[0][0]))
    #print(data_dic)
    return data_dic

#print(loadVCF('../DataSets/Unnormalized/myTest.csv'))
#print(loadVCF('../DataSets/Unnormalized/myTestNewNew.csv'))
